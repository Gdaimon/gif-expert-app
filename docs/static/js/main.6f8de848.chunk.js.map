{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","response","json","data","gifts","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,EAAWK,QAA5B,mBAAuCE,OACrDN,EAAc,MAIhB,SACE,uBACEO,KAAK,OACLC,YAAY,aACZC,MAAOV,EACPW,SAnBoB,SAACR,GAEzBF,EAAcE,EAAES,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACN,mCACTC,EAFe,iDAEiCC,UACpDH,GAHmB,6BACN,oCADM,SAKEI,MAAMF,GALR,cAKfG,EALe,gBAOEA,EAASC,OAPX,uBAObC,EAPa,EAObA,KAEFC,EAAQD,EAAKE,KAAI,SAACC,GAAD,YAAU,CAC/BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAGpCa,QAAQC,IAAIR,GAfS,kBAgBdA,GAhBc,4CAAH,sDCEPS,EAAc,SAAC,GAAoB,IAAlBL,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,sBAAKgB,UAAU,yCAAf,UACE,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCAGS,EAAU,SAAC,GAAmB,IAAjBrB,EAAgB,EAAhBA,UAAgB,ECHd,SAACA,GAAe,IAAD,EACff,mBAAS,CACjCsB,KAAM,GACNe,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAqBzC,OAfAC,qBAAU,WACR1B,EAAQC,GAAW0B,MAAK,SAAChB,GAAD,OAQtBc,EAAS,CACPjB,KAAMG,EACNY,SAAS,SAGZ,CAACtB,IACGuB,EDV2BI,CAAa3B,GAAjCa,EAR0B,EAQhCN,KAAce,EARkB,EAQlBA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAClDsB,GACC,mBAAGJ,UAAU,mCAAb,yBAEF,qBAAKA,UAAU,YAAf,SACGL,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEMjBiB,EA1BM,WAAM,MAEW3C,mBAAS,CAAC,cAFrB,mBAElBQ,EAFkB,KAENT,EAFM,KAWzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGCS,EAAWgB,KAAI,SAACT,GAAD,OAEd,aADA,CACC,EAAD,CAAyBA,UAAWA,GAAtBA,UCnBtB6B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.6f8de848.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (e) => {\n    // console.log(e.target.value);\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log('Submit hecho');\n    if (inputValue.trim().length > 2) {\n      setCategories((categories) => [inputValue.trim(), ...categories]);\n      setInputValue('');\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Buscar...!\"\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (categoria) => {\n  const apiKey = 'DDG3hItPp5HIRNC0nit3AXOR7eCyQZAe';\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    categoria,\n  )}&limit=10&api_key=${apiKey}`;\n  const response = await fetch(url);\n  // const { data, meta } = await response.json();\n  const { data } = await response.json();\n\n  const gifts = data.map((img) => ({\n    id: img.id,\n    title: img.title,\n    url: img.images?.downsized_medium.url,\n  }));\n\n  console.log(gifts);\n  return gifts;\n};\n","import React from 'react';\n\nexport const GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n","// import React, { useEffect, useState } from 'react';\nimport React from 'react';\n// import { getGifs } from '../helpers/getGifs';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ categoria }) => {\n  // const [count, setCount] = useState(0);\n  // const [images, setImages] = useState([]);\n  // useEffect(() => {\n  //   getGifs(categoria).then(setImages);\n  // }, [categoria]);\n\n  // Custom Hooks\n  const { data: images, loading } = useFetchGifs(categoria);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\n      {loading && (\n        <p className=\"animate__animated animate__flash\">Cargando...</p>\n      )}\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n\n        {/* <h3>{count}</h3>\n      <button\n        onClick={() => {\n          setCount(count + 1);\n        }}\n      >\n        Adicionar\n      </button> */}\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (categoria) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(categoria).then((img) =>\n      // setTimeout(() => {\n      //   setState({\n      //     data: img,\n      //     loading: false,\n      //   });\n      // }, 3000),\n\n      setState({\n        data: img,\n        loading: false,\n      }),\n    );\n  }, [categoria]);\n  return state; // {data:[], loading:true}\n};\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n  // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n  const [categories, setCategories] = useState(['Samurai X']);\n\n  /*\n  const handleAdd = () => {\n    const nombre = 'Batman';\n    // setCategories([...categories, nombre]);\n    setCategories((cats) => [...categories, nombre]);\n  };\n  */\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      {/* <button onClick={handleAdd}>Agregar</button> */}\n\n      {categories.map((categoria) => (\n        // <li key={categoria}>{categoria}</li>\n        <GifGrid key={categoria} categoria={categoria} />\n      ))}\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}